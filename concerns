annotations
default arguments
unescape_html
handler vs handlers (empty list vs null)
for loop is assumed non-empty!!!! for(s1;s2;s3) {} with any of s1, s2, s3 empty gives Parser.InvalidArgument - FIXED
S7.4_A6.js runs out of memory on my computer before finishing
esprima treats AssignmentExpression with literal on LHS as a parse error (ECMA "early error"), which is not spec compliant - FIXED
esprima doesn't interpret a single unbracketed bare FunctionExpression as valid javacript e.g. the program "function() {}"

eval doesn't know if its parent context is strict when parsing. change parse_pickable to take parent's strict status, and change exp_from_string to take a force_strict parameter, and set the strict var of esprima based on that

eval doesn't correctly throw SyntaxError for true parser borks. -FIXED

tests using FunctionDeclaration as statement, goes against spec recommendation, see FunctionDeclarationAsStatement.txt
we may be incorrectly interpreting some FunctionExpressions as FunctionStatements - FIXED
every single abort is now either this issue or a NYI

parser tests expected to fail
test_do_while due to test for @invariant annotation
test_continue due to test for @invariant annotation
test_continue_label due to test for @invariant annotation
test_break due to test for @invariant annotation
test_break_label due to test for @invariant annotation
test_for due to test for @invariant annotation, would also fail due to minor offset calculation differences between parsers
test_getter due to minor offset calculation differences between parsers
test_setter due to minor offset calculation differences between parsers
test_top_annotations due to test for @topensures annotation

